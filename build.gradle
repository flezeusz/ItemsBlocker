plugins {
    id 'java'
    id "com.gradleup.shadow" version "8.3.3"
}

group = 'com.epicplayera10'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    // Okaeri Config
    maven { url 'https://storehouse.okaeri.eu/repository/maven-public/' }

    // ACF
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT"

    implementation 'eu.okaeri:okaeri-configs-yaml-bukkit:5.0.5'
    implementation 'eu.okaeri:okaeri-configs-serdes-bukkit:5.0.5'
    implementation 'eu.okaeri:okaeri-configs-serdes-commons:5.0.5'
    implementation 'eu.okaeri:okaeri-configs-validator-okaeri:5.0.5'
    implementation 'eu.okaeri:okaeri-placeholders-bukkit:5.1.1'

    implementation "co.aikar:acf-paper:0.5.1-SNAPSHOT"
}

shadowJar {
    relocate("eu.okaeri", "com.epicplayera10.exampleplugin.libs.eu.okaeri")
    relocate("co.aikar.commands", "com.epicplayera10.exampleplugin.libs.acf")
    relocate("co.aikar.locales", "com.epicplayera10.exampleplugin.libs.locales")
}

assemble.dependsOn(shadowJar)

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
